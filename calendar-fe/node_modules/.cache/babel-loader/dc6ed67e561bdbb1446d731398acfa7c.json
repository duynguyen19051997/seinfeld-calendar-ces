{"ast":null,"code":"var _jsxFileName = \"/home/duynguyen/store/seinfeld-calendar-fe/src/context/CalenderContext.js\";\nimport React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nexport const CalenderContext = React.createContext();\nexport class CalenderContextProvider extends Component {\n  constructor() {\n    super();\n    this.state = {\n      habitID: [],\n      listEvent: [],\n      idHabit: \"\",\n      inforHabit: [],\n      dataCheckHabit: []\n    };\n    this.clickToPushID = this.clickToPushID.bind(this);\n    this.getCalender = this.getCalender.bind(this);\n    this.checkExistHabit = this.checkExistHabit.bind(this);\n  }\n\n  checkExistHabit(i) {\n    this.state.dataCheckHabit.forEach(dataCheck => {\n      if (moment(dataCheck.dateChecked).format(\"L\").toString() === moment(i).format(\"L\").toString()) {\n        return true;\n      }\n    });\n    return false;\n  }\n\n  getCalender(query) {\n    let dataHabit = [];\n    const data = [];\n    Axios.get(query, {\n      headers: {\n        \"Authorization\": \"Bearer \".concat(localStorage.getItem(\"Token\"))\n      }\n    }).then(response => {\n      dataHabit = response.data.habit;\n      this.setState({\n        inforHabit: dataHabit,\n        dataCheckHabit: response.data.listChecked\n      });\n      dataHabit.map(habit => {\n        const days = habit.repeat;\n\n        if (habit.repeat.length > 0) {\n          let i = new Date(habit.timeBegin).getTime();\n\n          while (i <= new Date(habit.timeEnd).getTime()) {\n            const dayofweek = new Date(i).getDay() + 1;\n\n            if (days.some(a => a === dayofweek)) {\n              if (new Date(i) < new Date()) {\n                let temp = null;\n                this.state.dataCheckHabit.forEach(dataCheck => {\n                  if (moment(dataCheck.dateChecked).format(\"L\").toString() === moment(i).format(\"L\").toString()) {\n                    temp = dataCheck;\n                  }\n                });\n\n                if (temp) {\n                  data.push({\n                    status: true,\n                    start: new Date(i),\n                    end: new Date(i),\n                    allDay: true,\n                    title: temp.note\n                  });\n                } else {\n                  data.push({\n                    status: false,\n                    start: new Date(i),\n                    end: new Date(i),\n                    allDay: true,\n                    title: \"NOT DO\"\n                  });\n                }\n              }\n            }\n\n            i += 86400000;\n          }\n        }\n      });\n      this.setState({\n        listEvent: data\n      });\n    }).catch(() => {});\n  }\n\n  componentWillMount() {\n    this.getCalender(\"http://localhost:3005/\");\n  }\n\n  clickToPushID(newHabitId) {\n    let query = \"http://localhost:3005/index/habit?id=\" + newHabitId;\n    this.setState({\n      habitID: newHabitId,\n      idHabit: newHabitId\n    });\n    this.getCalender(query);\n  }\n\n  render() {\n    return React.createElement(CalenderContext.Provider, {\n      value: {\n        inforHabit: this.state.inforHabit,\n        habitID: this.state.habitID,\n        listEvent: this.state.listEvent,\n        clickToPushID: this.clickToPushID,\n        idHabit: this.state.idHabit\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["/home/duynguyen/store/seinfeld-calendar-fe/src/context/CalenderContext.js"],"names":["React","Component","Axios","moment","CalenderContext","createContext","CalenderContextProvider","constructor","state","habitID","listEvent","idHabit","inforHabit","dataCheckHabit","clickToPushID","bind","getCalender","checkExistHabit","i","forEach","dataCheck","dateChecked","format","toString","query","dataHabit","data","get","headers","localStorage","getItem","then","response","habit","setState","listChecked","map","days","repeat","length","Date","timeBegin","getTime","timeEnd","dayofweek","getDay","some","a","temp","push","status","start","end","allDay","title","note","catch","componentWillMount","newHabitId","render","props","children"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport moment from \"moment\";\nexport const CalenderContext = React.createContext();\n\nexport class CalenderContextProvider extends Component {\n    constructor () {\n        super();\n        this.state = {\n            habitID: [],\n            listEvent: [],\n            idHabit: \"\",\n            inforHabit: [],\n            dataCheckHabit: []\n        };\n        this.clickToPushID = this.clickToPushID.bind(this);\n        this.getCalender = this.getCalender.bind(this);\n        this.checkExistHabit = this.checkExistHabit.bind(this);\n    }\n    checkExistHabit (i) {\n        this.state.dataCheckHabit.forEach((dataCheck) => {\n            if (moment(dataCheck.dateChecked).format(\"L\").toString() === moment(i).format(\"L\").toString()) {\n                return true;\n            }\n        });\n        return false;\n    }\n    getCalender (query) {\n        let dataHabit = [];\n        const data = [];\n        Axios.get(query, { headers: { \"Authorization\": `Bearer ${localStorage.getItem(\"Token\")}` } })\n            .then((response) => {\n                dataHabit = response.data.habit;\n                this.setState({\n                    inforHabit: dataHabit,\n                    dataCheckHabit: response.data.listChecked\n                });\n                dataHabit.map((habit) => {\n                    const days = habit.repeat;\n                    if (habit.repeat.length > 0) {\n                        let i = new Date(habit.timeBegin).getTime();\n                        while (i <= new Date(habit.timeEnd).getTime()) {\n                            const dayofweek = new Date(i).getDay() + 1;\n                            if (days.some(a => a === dayofweek)) {\n                                if (new Date(i) < new Date()) {\n                                    let temp = null;\n                                    this.state.dataCheckHabit.forEach((dataCheck) => {\n                                        if (moment(dataCheck.dateChecked).format(\"L\").toString() === moment(i).format(\"L\").toString()) {\n                                            temp = dataCheck;\n                                        }\n                                    });\n                                    if (temp) {\n                                        data.push({\n                                            status: true,\n                                            start: new Date(i),\n                                            end: new Date(i),\n                                            allDay: true,\n                                            title: temp.note\n                                        });\n                                    } else {\n                                        data.push({\n                                            status: false,\n                                            start: new Date(i),\n                                            end: new Date(i),\n                                            allDay: true,\n                                            title: \"NOT DO\"\n                                        });\n                                    }\n                                }\n                            }\n                            i += 86400000;\n                        }\n                    }\n                });\n                this.setState({\n                    listEvent: data\n                });\n            }).catch(() => {\n\n            });\n    }\n\n    componentWillMount () {\n        this.getCalender(\"http://localhost:3005/\");\n    }\n\n    clickToPushID (newHabitId) {\n        let query = \"http://localhost:3005/index/habit?id=\" + newHabitId;\n        this.setState({\n            habitID: newHabitId,\n            idHabit: newHabitId\n        });\n        this.getCalender(query);\n    }\n\n    render () {\n        return (\n            <CalenderContext.Provider\n                value={{\n                    inforHabit: this.state.inforHabit,\n                    habitID: this.state.habitID,\n                    listEvent: this.state.listEvent,\n                    clickToPushID: this.clickToPushID,\n                    idHabit: this.state.idHabit\n                }}\n            >\n                {this.props.children}\n            </CalenderContext.Provider>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}